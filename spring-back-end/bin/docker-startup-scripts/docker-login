#!/usr/bin/env bash

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ENV_CONFIG_FILE="${SCRIPT_DIR}/../.env"

. "${ENV_CONFIG_FILE}"

############################################################
# Help                                                     #
############################################################
help() {
  echo ""
  echo -e "Executable that will automatically pull the docker Container ID for the postgres image (if it is running), log in to the image, and run the command provided as an option. The default command is /bin/bash if no [-c] command is provided." | fmt
  echo
  echo "Usage: $0 [-h] [-v] [-c \"shell-command(s)-to-run]\""
  echo -e "\t-h\t Display this help message" | fmt
  echo -e "\t-v\t Verbose mode (set -x)" | fmt
  echo -e "\t-c\t Double quoted shell command(s) to run from the image's shell once logged in." | fmt
  echo -e "\tExamples:" | fmt
  echo -e "\t$ ./bin/docker-login -c \"ls\"" | fmt
  echo
  echo
}

############################################################
############################################################
# Main Program                                             #
############################################################
############################################################

COMMAND="/bin/ash"

while getopts ":hvc:" opt; do
  case $opt in
  h)
    help
    exit 0
    ;;
  v)
    set -x
    ;;
  c)
    COMMAND="$OPTARG"
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    help
    exit 1
    ;;
  :)
    echo ""
    echo "Option -$OPTARG requires an argument." >&2
    help
    exit 1
    ;;
  esac
done

# https://docs.docker.com/engine/reference/commandline/ps/
IMAGE_CONTAINER_ID=$(docker ps --filter "name=${DEFAULT_DOCKER_IMAGE_NAME}" -q)

docker exec -it "${IMAGE_CONTAINER_ID}" sh -c "${COMMAND}"
