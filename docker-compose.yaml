version: '3.9'

# Do not run this file directly. Use the ./bin/docker-startup-scripts instead
# We leverage environment variables that must be exported first

services:
  pjl-application-db: # this should equal ${POSTGRES_DOCKER_COMPOSE_SERVICE_NAME} in .env
    image: "postgres" # https://hub.docker.com/_/postgres/
    restart: always
    container_name: ${POSTGRES_DOCKER_IMAGE_NAME_OUTER}
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DEFAULT_DOCKER_DATABASE_NAME}
      POSTGRES_USER: ${BACKEND_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${BACKEND_DATASOURCE_PASSWORD}
    volumes:
      - /var/tmp/db-data:/tmp # local directory:container directory
  back-end-server: # this should equal ${SPRING_DOCKER_COMPOSE_SERVICE_NAME} in .env
    build: ./spring-back-end
    image: ${SPRING_DOCKER_IMAGE_NAME_OUTER}:0.0.1
    ports:
      - "8443:8443"
    container_name: ${SPRING_DOCKER_IMAGE_NAME_OUTER}
    environment:
      DEFAULT_DOCKER_DATABASE_NAME: ${DEFAULT_DOCKER_DATABASE_NAME}
      BACKEND_DATASOURCE_USERNAME: ${BACKEND_DATASOURCE_USERNAME}
      BACKEND_DATASOURCE_PASSWORD: ${BACKEND_DATASOURCE_PASSWORD}
      DATABASE_DOCKER_SERVICE_NAME: ${POSTGRES_DOCKER_COMPOSE_SERVICE_NAME}
  front-end-app:
    build:
      context: ./angular-front-end
      args:
        ANGULAR_WORKDIR: ${DEFAULT_ANGULAR_DOCKER_WORKDIR}
    develop:
      watch:
        - action: sync
          path: ./angular-front-end/src/app
          target: /${DEFAULT_ANGULAR_DOCKER_WORKDIR}/src/app
          ignore:
            - ./angular-front-end/node_modules
        - action: rebuild
          path: ./angular-front-end/package.json
    image: ${ANGULAR_DOCKER_IMAGE_NAME_OUTER}:0.0.1
    ports:
      - "4200:4200"
    container_name: ${ANGULAR_DOCKER_IMAGE_NAME_OUTER}
    depends_on:
      - ${SPRING_DOCKER_COMPOSE_SERVICE_NAME}